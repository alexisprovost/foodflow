name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Install bzip2 on remote machine
        env:
            HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
            USER: ${{ secrets.DEPLOY_SERVER_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST "sudo apt-get update && sudo apt-get install -y bzip2"

      - name: Install Docker and Docker Compose on remote machine
        env:
            HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
            USER: ${{ secrets.DEPLOY_SERVER_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST "sudo apt-get update && sudo apt-get install -y docker.io && sudo curl -L 'https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)' -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose"

      - name: Login to GitHub Container Registry on remote machine
        env:
          HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
          USER: ${{ secrets.DEPLOY_SERVER_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST "echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u ${{ github.actor }} --password-stdin"

      - name: Docker-Compose Remote Deployment
        uses: alex-ac/github-action-ssh-docker-compose@master
        with:
          ssh_host: ${{ secrets.DEPLOY_SERVER_HOST }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_user: ${{ secrets.DEPLOY_SERVER_USER }}
          docker_compose_prefix: ${{ github.repository }}
          docker_compose_filename: "dev/docker-compose.yml"
          use_stack: 'true'
